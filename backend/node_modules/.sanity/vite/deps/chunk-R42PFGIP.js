import {
  defineLocaleResourceBundle,
  definePlugin,
  route
} from "./chunk-5QKFQG6E.js";
import {
  EyeOpenIcon
} from "./chunk-XJL7XXVG.js";
import {
  require_react
} from "./chunk-CA54IONW.js";
import {
  __toESM
} from "./chunk-5IKWDFCZ.js";

// node_modules/.pnpm/@sanity+vision@3.68.3_@babel+runtime@7.26.0_@codemirror+lint@6.8.4_@codemirror+theme-one-dark_tj3tjx6s3dlfdkoojuylatb4aq/node_modules/@sanity/vision/lib/_chunks-es/index.mjs
var import_react = __toESM(require_react(), 1);
var visionLocaleNamespace = "vision";
var visionUsEnglishLocaleBundle = defineLocaleResourceBundle({
  locale: "en-US",
  namespace: visionLocaleNamespace,
  resources: () => import("./resources-3G6CDDGJ.js")
});
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    __hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0 && (target[prop] = source[prop]);
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source))
      exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop) && (target[prop] = source[prop]);
  return target;
};
var visionTool = definePlugin((options) => {
  const _a = options || {}, {
    name,
    title,
    icon
  } = _a, config = __objRest(_a, [
    "name",
    "title",
    "icon"
  ]);
  return {
    name: "@sanity/vision",
    tools: [{
      name: name || "vision",
      title: title || "Vision",
      icon: icon || EyeOpenIcon,
      component: (0, import_react.lazy)(() => import("./SanityVision-ZXATJ7NA.js")),
      options: config,
      router: route.create("/*"),
      __internalApplicationType: "sanity/vision"
    }],
    i18n: {
      bundles: [visionUsEnglishLocaleBundle]
    }
  };
});

export {
  visionLocaleNamespace,
  visionTool
};
//# sourceMappingURL=chunk-R42PFGIP.js.map
