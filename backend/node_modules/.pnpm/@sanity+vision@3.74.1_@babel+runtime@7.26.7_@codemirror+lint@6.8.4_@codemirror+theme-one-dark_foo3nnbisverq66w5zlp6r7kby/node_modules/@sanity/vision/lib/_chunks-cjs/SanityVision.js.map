{"version":3,"file":"SanityVision.js","sources":["../../src/apiVersions.ts","../../src/components/DelayedSpinner.tsx","../../src/codemirror/extensions.ts","../../src/codemirror/useCodemirrorTheme.ts","../../src/codemirror/VisionCodeMirror.styled.tsx","../../src/codemirror/VisionCodeMirror.tsx","../../src/perspectives.ts","../../src/util/encodeQueryString.ts","../../src/util/getBlobUrl.ts","../../src/util/isPlainObject.ts","../../src/util/localStorage.ts","../../src/util/parseApiQueryString.ts","../../src/util/prefixApiVersion.ts","../../src/util/resizeObserver.ts","../../src/util/tryParseParams.ts","../../src/util/validateApiVersion.ts","../../src/components/ParamsEditor.tsx","../../src/components/PerspectivePopover.styled.tsx","../../src/components/PerspectivePopover.tsx","../../src/components/QueryErrorDialog.styled.tsx","../../src/components/QueryErrorDetails.tsx","../../src/components/QueryErrorDialog.tsx","../../src/components/ResultView.styled.tsx","../../src/components/ResultView.tsx","../../src/components/SaveResultButtons.tsx","../../src/components/VisionGui.styled.tsx","../../src/components/VisionGui.tsx","../../src/hooks/useDatasets.ts","../../src/containers/VisionContainer.tsx","../../src/containers/VisionErrorBoundary.tsx","../../src/SanityVision.tsx"],"sourcesContent":["export const API_VERSIONS = ['v1', 'vX', 'v2021-03-25', 'v2021-10-21', 'v2022-03-07']\nexport const [DEFAULT_API_VERSION] = API_VERSIONS.slice(-1)\n","import {Spinner} from '@sanity/ui'\nimport {useEffect, useState} from 'react'\n\ninterface DelayedSpinnerProps {\n  delay?: number\n}\n\n// Waits for X ms before showing a spinner\nexport function DelayedSpinner(props: DelayedSpinnerProps) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), props.delay || 500)\n    return () => clearTimeout(timer)\n  }, [props.delay])\n\n  return show ? <Spinner muted size={4} /> : null\n}\n","import {closeBrackets} from '@codemirror/autocomplete'\nimport {defaultKeymap, history, historyKeymap} from '@codemirror/commands'\nimport {javascriptLanguage} from '@codemirror/lang-javascript'\nimport {\n  bracketMatching,\n  defaultHighlightStyle,\n  indentOnInput,\n  syntaxHighlighting,\n} from '@codemirror/language'\nimport {highlightSelectionMatches} from '@codemirror/search'\nimport {type Extension} from '@codemirror/state'\nimport {\n  drawSelection,\n  highlightActiveLine,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  keymap,\n  lineNumbers,\n} from '@codemirror/view'\n\nexport const codemirrorExtensions: Extension[] = [\n  [javascriptLanguage],\n  lineNumbers(),\n  highlightActiveLine(),\n  highlightActiveLineGutter(),\n  highlightSelectionMatches(),\n  highlightSpecialChars(),\n  indentOnInput(),\n  bracketMatching(),\n  closeBrackets(),\n  history(),\n  drawSelection(),\n  syntaxHighlighting(defaultHighlightStyle, {fallback: true}),\n  keymap.of(\n    [\n      // Override the default keymap for Mod-Enter to not insert a new line, we have a custom event handler for executing queries\n      {key: 'Mod-Enter', run: () => true},\n\n      // Add the default keymap and history keymap\n      defaultKeymap,\n      historyKeymap,\n    ]\n      .flat()\n      .filter(Boolean),\n  ),\n]\n","import {HighlightStyle, syntaxHighlighting} from '@codemirror/language'\nimport {EditorView} from '@codemirror/view'\nimport {tags as t} from '@lezer/highlight'\nimport {hues} from '@sanity/color'\nimport {rem, type Theme} from '@sanity/ui'\nimport {useMemo} from 'react'\n\nexport function useCodemirrorTheme(theme: Theme) {\n  const cmTheme = useMemo(() => createTheme(theme), [theme])\n  const cmHighlight = useMemo(() => syntaxHighlighting(createHighlight(theme)), [theme])\n\n  return [cmTheme, cmHighlight]\n}\n\nfunction createTheme(theme: Theme) {\n  const {color, fonts} = theme.sanity\n  const card = color.card.enabled\n  const cursor = hues.blue[color.dark ? 400 : 500].hex\n  const selection = hues.gray[theme.sanity.color.dark ? 900 : 100].hex\n\n  return EditorView.theme(\n    {\n      '&': {\n        color: card.fg,\n        backgroundColor: card.bg,\n      },\n\n      '.cm-content': {\n        caretColor: cursor,\n      },\n\n      '.cm-editor': {\n        fontFamily: fonts.code.family,\n        fontSize: rem(fonts.code.sizes[1].fontSize),\n        lineHeight: 'inherit',\n      },\n\n      '.cm-cursor, .cm-dropCursor': {borderLeftColor: cursor},\n      '&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: selection,\n      },\n\n      '.cm-panels': {backgroundColor: card.bg, color: card.fg},\n      '.cm-panels.cm-panels-top': {borderBottom: `2px solid ${card.border}`},\n      '.cm-panels.cm-panels-bottom': {borderTop: `2px solid ${card.border}`},\n    },\n    {dark: color.dark},\n  )\n}\n\nfunction createHighlight(theme: Theme) {\n  const c = theme.sanity.color.base\n  const s = theme.sanity.color.syntax\n  return HighlightStyle.define([\n    {tag: t.keyword, color: s.keyword},\n    {tag: [t.propertyName, t.name, t.deleted, t.character, t.macroName], color: s.property},\n    {tag: [t.function(t.variableName), t.labelName], color: s.function},\n    {tag: [t.color, t.constant(t.name), t.standard(t.name)], color: s.variable},\n    {tag: [t.definition(t.name), t.separator], color: s.constant},\n    {\n      tag: [\n        t.typeName,\n        t.className,\n        t.number,\n        t.changed,\n        t.annotation,\n        t.modifier,\n        t.self,\n        t.namespace,\n      ],\n      color: s.number,\n    },\n    {\n      tag: [t.operator, t.operatorKeyword, t.url, t.escape, t.regexp, t.link, t.special(t.string)],\n      color: s.operator,\n    },\n    {tag: [t.meta, t.comment], color: s.comment},\n    {tag: t.strong, fontWeight: 'bold'},\n    {tag: t.emphasis, fontStyle: 'italic'},\n    {tag: t.strikethrough, textDecoration: 'line-through'},\n    {tag: t.heading, fontWeight: 'bold', color: s.property},\n    {tag: [t.atom, t.bool, t.special(t.variableName)], color: s.boolean},\n    {tag: [t.processingInstruction, t.string, t.inserted], color: s.string},\n    {tag: t.invalid, color: c.fg},\n  ])\n}\n","import {rem} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const EditorRoot = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  overflow: clip;\n  position: relative;\n  display: flex;\n\n  & .cm-theme {\n    width: 100%;\n  }\n\n  & .cm-editor {\n    height: 100%;\n\n    font-size: 16px;\n    line-height: 21px;\n  }\n\n  & .cm-line {\n    padding-left: ${({theme}) => rem(theme.sanity.space[3])};\n  }\n\n  & .cm-content {\n    border-right-width: ${({theme}) => rem(theme.sanity.space[4])} !important;\n    padding-top: ${({theme}) => rem(theme.sanity.space[5])};\n  }\n`\n","import {useTheme} from '@sanity/ui'\nimport CodeMirror, {type ReactCodeMirrorProps} from '@uiw/react-codemirror'\n\nimport {codemirrorExtensions} from './extensions'\nimport {useCodemirrorTheme} from './useCodemirrorTheme'\nimport {EditorRoot} from './VisionCodeMirror.styled'\n\nexport function VisionCodeMirror(\n  props: Omit<ReactCodeMirrorProps, 'basicSetup' | 'theme' | 'extensions'>,\n) {\n  const sanityTheme = useTheme()\n  const theme = useCodemirrorTheme(sanityTheme)\n\n  return (\n    <EditorRoot>\n      <CodeMirror basicSetup={false} theme={theme} extensions={codemirrorExtensions} {...props} />\n    </EditorRoot>\n  )\n}\n","export const SUPPORTED_PERSPECTIVES = [\n  'pinnedRelease',\n  'raw',\n  'previewDrafts',\n  'published',\n  'drafts',\n] as const\n\nexport type SupportedPerspective = (typeof SUPPORTED_PERSPECTIVES)[number]\n\n/**\n * Virtual perspectives are recognised by Vision, but do not concretely reflect the names of real\n * perspectives. Virtual perspectives are transformed into real perspectives before being used to\n * interact with data.\n *\n * For example, the `pinnedRelease` virtual perspective is transformed to the real perspective\n * currently pinned in Studio.\n */\nexport const VIRTUAL_PERSPECTIVES = ['pinnedRelease'] as const\n\nexport type VirtualPerspective = (typeof VIRTUAL_PERSPECTIVES)[number]\n\nexport const DEFAULT_PERSPECTIVE: SupportedPerspective = 'raw'\n\nexport function isSupportedPerspective(p: string): p is SupportedPerspective {\n  return SUPPORTED_PERSPECTIVES.includes(p as SupportedPerspective)\n}\n\nexport function isVirtualPerspective(\n  maybeVirtualPerspective: unknown,\n): maybeVirtualPerspective is VirtualPerspective {\n  return (\n    typeof maybeVirtualPerspective === 'string' &&\n    VIRTUAL_PERSPECTIVES.includes(maybeVirtualPerspective as VirtualPerspective)\n  )\n}\n","export function encodeQueryString(\n  query: string,\n  params: Record<string, unknown> = {},\n  options: Record<string, string | string[]> = {},\n): string {\n  const searchParams = new URLSearchParams()\n  searchParams.set('query', query)\n\n  for (const [key, value] of Object.entries(params)) {\n    searchParams.set(`$${key}`, JSON.stringify(value))\n  }\n\n  for (const [key, value] of Object.entries(options)) {\n    if (value) searchParams.set(key, `${value}`)\n  }\n\n  return `?${searchParams}`\n}\n","import {json2csv} from 'json-2-csv'\n\nfunction getBlobUrl(content: string, mimeType: string): string {\n  return URL.createObjectURL(\n    new Blob([content], {\n      type: mimeType,\n    }),\n  )\n}\n\nfunction getMemoizedBlobUrlResolver(mimeType: string, stringEncoder: (input: any) => string) {\n  return (() => {\n    let prevResult = ''\n    let prevContent = ''\n    return (input: unknown) => {\n      const content = stringEncoder(input)\n      if (typeof content !== 'string' || content === '') {\n        return undefined\n      }\n\n      if (content === prevContent) {\n        return prevResult\n      }\n\n      prevContent = content\n      if (prevResult) {\n        URL.revokeObjectURL(prevResult)\n      }\n\n      prevResult = getBlobUrl(content, mimeType)\n      return prevResult\n    }\n  })()\n}\n\nexport const getJsonBlobUrl = getMemoizedBlobUrlResolver('application/json', (input) =>\n  JSON.stringify(input, null, 2),\n)\n\nexport const getCsvBlobUrl = getMemoizedBlobUrlResolver('text/csv', (input) => {\n  return json2csv(Array.isArray(input) ? input : [input]).trim()\n})\n","export function isPlainObject(obj: unknown): obj is Record<string, unknown> {\n  return (\n    !!obj && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]'\n  )\n}\n","import {isPlainObject} from './isPlainObject'\n\nconst hasLocalStorage = supportsLocalStorage()\nconst keyPrefix = 'sanityVision:'\n\nexport interface LocalStorageish {\n  get: <T>(key: string, defaultVal: T) => T\n  set: <T>(key: string, value: T) => T\n  merge: <T>(props: T) => T\n}\n\nexport function clearLocalStorage() {\n  if (!hasLocalStorage) {\n    return\n  }\n\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i)\n    if (key?.startsWith(keyPrefix)) {\n      localStorage.removeItem(key)\n    }\n  }\n}\n\nexport function getLocalStorage(namespace: string): LocalStorageish {\n  const storageKey = `${keyPrefix}${namespace}`\n  let loadedState: Record<string, unknown> | null = null\n\n  return {get, set, merge}\n\n  function get<T>(key: string, defaultVal: T): T {\n    const state = ensureState()\n    return typeof state[key] === 'undefined' ? defaultVal : (state[key] as T)\n  }\n\n  function set<T>(key: string, value: T): T {\n    const state = ensureState()\n    state[key] = value\n    localStorage.setItem(storageKey, JSON.stringify(loadedState))\n    return value\n  }\n\n  function merge<T>(props: T): T {\n    const state = {...ensureState(), ...props}\n    localStorage.setItem(storageKey, JSON.stringify(state))\n    return state\n  }\n\n  function ensureState(): Record<string, unknown> {\n    if (loadedState === null) {\n      loadedState = loadState()\n    }\n\n    return loadedState\n  }\n\n  function loadState() {\n    if (!hasLocalStorage) {\n      return {}\n    }\n\n    try {\n      const stored = JSON.parse(localStorage.getItem(storageKey) || '{}')\n      return isPlainObject(stored) ? stored : {}\n    } catch (err) {\n      return {}\n    }\n  }\n}\n\nfunction supportsLocalStorage() {\n  const mod = 'lsCheck'\n  try {\n    localStorage.setItem(mod, mod)\n    localStorage.removeItem(mod)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","export interface ParsedApiQueryString {\n  query: string\n  params: Record<string, unknown>\n  options: Record<string, string>\n}\n\nexport function parseApiQueryString(qs: URLSearchParams): ParsedApiQueryString {\n  const params: Record<string, unknown> = {}\n  const options: Record<string, string> = {}\n\n  for (const [key, value] of qs.entries()) {\n    if (key[0] === '$') {\n      params[key.slice(1)] = JSON.parse(value)\n      continue\n    }\n\n    if (key === 'perspective') {\n      options[key] = value\n      continue\n    }\n  }\n\n  return {query: qs.get('query') || '', params, options}\n}\n","export function prefixApiVersion(version: string): string {\n  if (version[0] !== 'v' && version !== 'other') {\n    return `v${version}`\n  }\n\n  return version\n}\n","import {ResizeObserver as ResizeObserverPolyfill} from '@juggle/resize-observer'\n\nexport const RO = typeof document === 'undefined' ? ResizeObserverPolyfill : window.ResizeObserver\n\nexport {RO as ResizeObserver}\n","import JSON5 from 'json5'\nimport {type TFunction} from 'sanity'\n\nexport function tryParseParams(\n  val: string,\n  t: TFunction<'vision', undefined>,\n): Record<string, unknown> | Error {\n  try {\n    const parsed = val ? JSON5.parse(val) : {}\n    return typeof parsed === 'object' && parsed && !Array.isArray(parsed) ? parsed : {}\n  } catch (err) {\n    // JSON5 always prefixes the error message with JSON5:, so we remove it\n    // to clean up the error tooltip\n    err.message = `${t('params.error.params-invalid-json')}:\\n\\n${err.message.replace(\n      'JSON5:',\n      '',\n    )}`\n    return err\n  }\n}\n","export function validateApiVersion(apiVersion: string): boolean {\n  const parseableApiVersion = apiVersion.replace(/^v/, '').trim().toUpperCase()\n\n  const isValidApiVersion =\n    parseableApiVersion.length > 0 &&\n    (parseableApiVersion === 'X' ||\n      parseableApiVersion === '1' ||\n      (/^\\d{4}-\\d{2}-\\d{2}$/.test(parseableApiVersion) && !isNaN(Date.parse(parseableApiVersion))))\n\n  return isValidApiVersion\n}\n","import {debounce} from 'lodash'\nimport {type ClipboardEvent, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type TFunction, useTranslation} from 'sanity'\n\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {visionLocaleNamespace} from '../i18n'\nimport {tryParseParams} from '../util/tryParseParams'\n\nconst defaultValue = `{\\n  \\n}`\n\nexport interface ParamsEditorChangeEvent {\n  parsed: Record<string, unknown>\n  raw: string\n  valid: boolean\n  error: string | undefined\n}\n\nexport interface ParamsEditorProps {\n  value: string\n  onChange: (changeEvt: ParamsEditorChangeEvent) => void\n  onPasteCapture: (event: ClipboardEvent<HTMLDivElement>) => void\n}\n\nexport interface ParamsEditorChange {\n  valid: boolean\n}\n\nexport function ParamsEditor(props: ParamsEditorProps) {\n  const {onChange, onPasteCapture} = props\n  const {t} = useTranslation(visionLocaleNamespace)\n  const {raw: value, error, parsed, valid} = eventFromValue(props.value, t)\n  const [isValid, setValid] = useState(valid)\n  const [init, setInit] = useState(false)\n\n  // Emit onChange on very first render\n  useEffect(() => {\n    if (!init) {\n      onChange({parsed, raw: value, valid: isValid, error})\n      setInit(true)\n    }\n  }, [error, init, isValid, onChange, parsed, value])\n\n  const handleChangeRaw = useCallback(\n    (newValue: string) => {\n      const event = eventFromValue(newValue, t)\n      setValid(event.valid)\n      onChange(event)\n    },\n    [onChange, t],\n  )\n\n  const handleChange = useMemo(() => debounce(handleChangeRaw, 333), [handleChangeRaw])\n  return (\n    <VisionCodeMirror\n      value={props.value || defaultValue}\n      onChange={handleChange}\n      onPasteCapture={onPasteCapture}\n    />\n  )\n}\n\nfunction eventFromValue(\n  value: string,\n  t: TFunction<typeof visionLocaleNamespace, undefined>,\n): ParamsEditorChangeEvent {\n  const parsedParams = tryParseParams(value, t)\n  const params = parsedParams instanceof Error ? {} : parsedParams\n  const validationError = parsedParams instanceof Error ? parsedParams.message : undefined\n  const isValid = !validationError\n\n  return {\n    parsed: params,\n    raw: value,\n    valid: isValid,\n    error: validationError,\n  }\n}\n","import {Box} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const PerspectivePopoverContent = styled(Box)`\n  /* This limits the width of the popover content */\n  max-width: 240px;\n`\n\nexport const PerspectivePopoverLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n","import {HelpCircleIcon} from '@sanity/icons'\nimport {Badge, Button, Card, Inline, Popover, Stack, Text, useClickOutsideEvent} from '@sanity/ui'\nimport {useCallback, useRef, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {PerspectivePopoverContent, PerspectivePopoverLink} from './PerspectivePopover.styled'\n\nexport function PerspectivePopover() {\n  const [open, setOpen] = useState(false)\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\n  const popoverRef = useRef<HTMLDivElement | null>(null)\n\n  const handleClick = useCallback(() => setOpen((o) => !o), [])\n\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  useClickOutsideEvent(\n    () => setOpen(false),\n    () => [buttonRef.current, popoverRef.current],\n  )\n\n  return (\n    <Popover\n      content={\n        <PerspectivePopoverContent>\n          <Stack space={4}>\n            <Inline space={2}>\n              <Text weight=\"medium\">{t('settings.perspectives.title')}</Text>\n              <Badge tone=\"primary\">{t('label.new')}</Badge>\n            </Inline>\n\n            <Card>\n              <Text muted>{t('settings.perspectives.description')}</Text>\n            </Card>\n\n            <Card>\n              <Text>\n                <PerspectivePopoverLink href=\"https://sanity.io/docs/perspectives\" target=\"_blank\">\n                  {t('settings.perspectives.action.docs-link')} &rarr;\n                </PerspectivePopoverLink>\n              </Text>\n            </Card>\n          </Stack>\n        </PerspectivePopoverContent>\n      }\n      placement=\"bottom-start\"\n      portal\n      padding={3}\n      ref={popoverRef}\n      open={open}\n    >\n      <Button\n        icon={HelpCircleIcon}\n        mode=\"bleed\"\n        padding={2}\n        tone=\"primary\"\n        fontSize={1}\n        ref={buttonRef}\n        onClick={handleClick}\n        selected={open}\n      />\n    </Popover>\n  )\n}\n","import {Code} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const ErrorCode = styled(Code)`\n  color: ${({theme}) => theme.sanity.color.muted.critical.enabled.fg};\n`\n","import {Box} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\ninterface ContentLakeQueryError {\n  details: {\n    query: string\n    start: number\n    end: number\n\n    lineNumber?: number\n    column?: number\n  }\n}\n\nexport function QueryErrorDetails({error}: {error: ContentLakeQueryError | Error}) {\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!('details' in error)) {\n    return null\n  }\n\n  const details = {...error.details, ...mapToLegacyDetails(error.details)}\n  if (!details.line) {\n    return null\n  }\n\n  return (\n    <div>\n      <ErrorCode size={1}>{`${details.line}\\n${dashLine(\n        details.column,\n        details.columnEnd,\n      )}`}</ErrorCode>\n      <Box marginTop={4}>\n        <ErrorCode size={1}>{`${t('query.error.line')}:   ${details.lineNumber}\\n${t(\n          'query.error.column',\n        )}: ${details.column}`}</ErrorCode>\n      </Box>\n    </div>\n  )\n}\n\nfunction mapToLegacyDetails(details: ContentLakeQueryError['details']) {\n  if (!details || typeof details.query !== 'string' || typeof details.start !== 'number') {\n    return {}\n  }\n\n  const {query, start, end} = details\n  const lineStart = query.slice(0, start).lastIndexOf('\\n') + 1\n  const lineNumber = (query.slice(0, lineStart).match(/\\n/g) || []).length\n  const line = query.slice(lineStart, query.indexOf('\\n', lineStart))\n  const column = start - lineStart\n  const columnEnd = typeof end === 'number' ? end - lineStart : undefined\n\n  return {line, lineNumber, column, columnEnd}\n}\n\nfunction dashLine(column: number, columnEnd: number | undefined): string {\n  const line = '-'.repeat(column)\n  const hats = `^`.repeat(columnEnd ? columnEnd - column : 1)\n  return `${line}${hats}`\n}\n","import {Stack} from '@sanity/ui'\n\nimport {QueryErrorDetails} from './QueryErrorDetails'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\nexport function QueryErrorDialog(props: {error: Error}) {\n  return (\n    <Stack space={5} marginTop={2}>\n      <ErrorCode size={1}>{props.error.message}</ErrorCode>\n      <QueryErrorDetails error={props.error} />\n    </Stack>\n  )\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const ResultViewWrapper = styled.div<{theme: Theme}>(({theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[0])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0px - ${rem(space[4])});\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[2])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n      word-break: break-word;\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {LinkIcon} from '@sanity/icons'\nimport {Code} from '@sanity/ui'\nimport LRU from 'quick-lru'\nimport {useDataset} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {ResultViewWrapper} from './ResultView.styled'\n\nconst lru = new LRU({maxSize: 50000})\n\nexport function ResultView(props: {data: unknown; datasetName: string}): React.JSX.Element {\n  const {data, datasetName} = props\n  const workspaceDataset = useDataset()\n\n  if (isRecord(data) || Array.isArray(data)) {\n    return (\n      <ResultViewWrapper>\n        <JsonInspector\n          data={data}\n          search={false}\n          isExpanded={isExpanded}\n          onClick={toggleExpanded}\n          interactiveLabel={workspaceDataset === datasetName ? DocumentEditLabel : undefined}\n        />\n      </ResultViewWrapper>\n    )\n  }\n\n  return <Code language=\"json\">{JSON.stringify(data)}</Code>\n}\n\nfunction DocumentEditLabel(props: {value: string; isKey: boolean; keypath: string}) {\n  if (props.isKey || (!props.keypath.endsWith('_id') && !props.keypath.endsWith('_ref'))) {\n    return null\n  }\n\n  return (\n    <IntentLink intent=\"edit\" params={{id: props.value}}>\n      <LinkIcon />\n    </IntentLink>\n  )\n}\n\nfunction isExpanded(keyPath: string, value: unknown): boolean {\n  const depthLimit = 4\n  const cached = lru.get(keyPath) as boolean | undefined\n\n  if (typeof cached === 'boolean') {\n    return cached\n  }\n\n  const segments = keyPath.split('.', depthLimit)\n  if (segments.length === depthLimit) {\n    return false\n  }\n\n  if (Array.isArray(value)) {\n    return true\n  }\n\n  return isRecord(value) && !segments.some((key) => isArrayKeyOverLimit(key))\n}\n\nfunction toggleExpanded(event: {path: string}): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst numeric = /^\\d+$/\nfunction isArrayKeyOverLimit(segment: string, limit = 10) {\n  return numeric.test(segment) && parseInt(segment, 10) > limit\n}\n","import {DocumentSheetIcon} from '@sanity/icons'\nimport {Button, Tooltip} from '@sanity/ui'\nimport {type MouseEvent} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\n\ninterface SaveButtonProps {\n  blobUrl: string | undefined\n}\n\nfunction preventSave(evt: MouseEvent<HTMLButtonElement>) {\n  return evt.preventDefault()\n}\n\nexport function SaveCsvButton({blobUrl}: SaveButtonProps) {\n  const {t} = useTranslation(visionLocaleNamespace)\n  const isDisabled = !blobUrl\n\n  const button = (\n    <Button\n      as=\"a\"\n      disabled={isDisabled}\n      download={isDisabled ? undefined : 'query-result.csv'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      onClick={isDisabled ? preventSave : undefined}\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"CSV\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n\n  return isDisabled ? (\n    <Tooltip content={t('result.save-result-as-csv.not-csv-encodable')} placement=\"top\">\n      {button}\n    </Tooltip>\n  ) : (\n    button\n  )\n}\n\nexport function SaveJsonButton({blobUrl}: SaveButtonProps) {\n  return (\n    <Button\n      as=\"a\"\n      download={'query-result.json'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"JSON\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n}\n","import {Box, Card, Flex, Label, rem, Text} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const Root = styled(Flex)`\n  .sidebarPanes .Pane {\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  & .Resizer {\n    background: var(--card-border-color);\n    opacity: 1;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n    border: solid transparent;\n  }\n\n  & .Resizer:hover {\n    border-color: var(--card-shadow-ambient-color);\n  }\n\n  & .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-width: 5px 0;\n    cursor: row-resize;\n    width: 100%;\n    z-index: 4;\n  }\n\n  & .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-width: 0 5px;\n    cursor: col-resize;\n    z-index: 2; /* To prevent the resizer from being hidden behind CodeMirror scroll area */\n  }\n\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`\n\nRoot.displayName = 'Root'\n\nexport const Header = styled(Card)`\n  border-bottom: 1px solid var(--card-border-color);\n`\n\nexport const StyledLabel = styled(Label)`\n  flex: 1;\n`\n\nexport const SplitpaneContainer = styled(Box)`\n  position: relative;\n`\n\nexport const QueryCopyLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n\nexport const InputBackgroundContainer = styled(Box)`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n  right: 0;\n\n  ${StyledLabel} {\n    user-select: none;\n  }\n`\n\nexport const InputBackgroundContainerLeft = styled(InputBackgroundContainer)`\n  // This is so its aligned with the gutters of CodeMirror\n  left: 33px;\n`\n\nexport const InputContainer = styled(Card)`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  flex-direction: column;\n`\n\nexport const ResultOuterContainer = styled(Flex)`\n  height: 100%;\n`\n\nexport const ResultInnerContainer = styled(Box)`\n  position: relative;\n`\n\nexport const ResultContainer = styled(Card)<{$isInvalid: boolean}>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  max-width: 100%;\n\n  ${({$isInvalid}) =>\n    $isInvalid &&\n    css`\n      &:after {\n        background-color: var(--card-bg-color);\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n    `}\n`\n\nexport const Result = styled(Box)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 20;\n`\n\nexport const ResultFooter = styled(Flex)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const TimingsCard = styled(Card)`\n  position: relative;\n`\n\nexport const TimingsContainer = styled(Box)`\n  width: 100%;\n  height: 100%;\n`\n\nexport const TimingsTextContainer = styled(Flex)`\n  height: 100%;\n  min-height: ${({theme}) =>\n    rem(\n      theme.sanity.space[3] * 2 +\n        theme.sanity.fonts.text.sizes[2].lineHeight -\n        theme.sanity.fonts.text.sizes[2].ascenderHeight -\n        theme.sanity.fonts.text.sizes[2].descenderHeight,\n    )};\n`\n\nexport const DownloadsCard = styled(Card)`\n  position: relative;\n`\n\nexport const SaveResultLabel = styled(Text)`\n  transform: initial;\n  &:before,\n  &:after {\n    content: none;\n  }\n  > span {\n    display: flex !important;\n    gap: ${({theme}) => rem(theme.sanity.space[3])};\n    align-items: center;\n  }\n`\n\nexport const ControlsContainer = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n","/* eslint-disable complexity */\nimport {SplitPane} from '@rexxars/react-split-pane'\nimport {\n  type ClientPerspective,\n  type ListenEvent,\n  type MutationEvent,\n  type SanityClient,\n} from '@sanity/client'\nimport {CopyIcon, ErrorOutlineIcon, PlayIcon, StopIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Grid,\n  Hotkeys,\n  Inline,\n  Select,\n  Stack,\n  Text,\n  TextInput,\n  type ToastContextValue,\n  Tooltip,\n} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {debounce} from 'lodash'\nimport {\n  type ChangeEvent,\n  type ComponentType,\n  createRef,\n  PureComponent,\n  type RefObject,\n  useMemo,\n} from 'react'\nimport isEqual from 'react-fast-compare'\nimport {type PerspectiveContextValue, type TFunction, Translate} from 'sanity'\n\nimport {API_VERSIONS, DEFAULT_API_VERSION} from '../apiVersions'\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {\n  DEFAULT_PERSPECTIVE,\n  isSupportedPerspective,\n  isVirtualPerspective,\n  SUPPORTED_PERSPECTIVES,\n  type SupportedPerspective,\n} from '../perspectives'\nimport {type VisionProps} from '../types'\nimport {encodeQueryString} from '../util/encodeQueryString'\nimport {getCsvBlobUrl, getJsonBlobUrl} from '../util/getBlobUrl'\nimport {getLocalStorage, type LocalStorageish} from '../util/localStorage'\nimport {parseApiQueryString, type ParsedApiQueryString} from '../util/parseApiQueryString'\nimport {prefixApiVersion} from '../util/prefixApiVersion'\nimport {ResizeObserver} from '../util/resizeObserver'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {validateApiVersion} from '../util/validateApiVersion'\nimport {DelayedSpinner} from './DelayedSpinner'\nimport {ParamsEditor, type ParamsEditorChangeEvent} from './ParamsEditor'\nimport {PerspectivePopover} from './PerspectivePopover'\nimport {QueryErrorDialog} from './QueryErrorDialog'\nimport {ResultView} from './ResultView'\nimport {SaveCsvButton, SaveJsonButton} from './SaveResultButtons'\nimport {\n  ControlsContainer,\n  DownloadsCard,\n  Header,\n  InputBackgroundContainer,\n  InputBackgroundContainerLeft,\n  InputContainer,\n  QueryCopyLink,\n  Result,\n  ResultContainer,\n  ResultFooter,\n  ResultInnerContainer,\n  ResultOuterContainer,\n  Root,\n  SaveResultLabel,\n  SplitpaneContainer,\n  StyledLabel,\n  TimingsCard,\n  TimingsTextContainer,\n} from './VisionGui.styled'\n\nfunction nodeContains(node: Node, other: EventTarget | Node | null): boolean {\n  if (!node || !other) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  return node === other || !!(node.compareDocumentPosition(other as Node) & 16)\n}\n\nconst sanityUrl =\n  /\\.(?:api|apicdn)\\.sanity\\.io\\/(vX|v1|v\\d{4}-\\d\\d-\\d\\d)\\/.*?(?:query|listen)\\/(.*?)\\?(.*)/\nconst isRunHotkey = (event: KeyboardEvent) =>\n  isHotkey('ctrl+enter', event) || isHotkey('mod+enter', event)\n\ninterface PaneSizeOptions {\n  defaultSize: number\n  size?: number\n  allowResize: boolean\n  minSize: number\n  maxSize: number\n}\n\nfunction narrowBreakpoint(): boolean {\n  return typeof window !== 'undefined' && window.innerWidth > 600\n}\n\nfunction calculatePaneSizeOptions(rootHeight: number): PaneSizeOptions {\n  return {\n    defaultSize: rootHeight / (narrowBreakpoint() ? 2 : 1),\n    size: rootHeight > 550 ? undefined : rootHeight * 0.4,\n    allowResize: rootHeight > 550,\n    minSize: Math.min(170, Math.max(170, rootHeight / 2)),\n    maxSize: rootHeight > 650 ? rootHeight * 0.7 : rootHeight * 0.6,\n  }\n}\n\ninterface Subscription {\n  unsubscribe: () => void\n}\n\ninterface VisionGuiProps extends VisionProps {\n  toast: ToastContextValue\n  datasets: string[]\n  t: TFunction<'vision', undefined>\n}\n\ninterface VisionGuiState {\n  // Selected options\n  dataset: string\n  apiVersion: string\n  customApiVersion: string | false\n  perspective: SupportedPerspective\n\n  // Selected options validation state\n  isValidApiVersion: boolean\n\n  // URL used to execute query/listener\n  url?: string | undefined\n\n  // Inputs\n  query: string\n  rawParams: string\n\n  // Parsed input\n  params: Record<string, unknown> | Error | undefined\n  paramsError?: string | undefined\n  hasValidParams: boolean\n\n  // Query/listen result\n  queryResult?: unknown | undefined\n  listenMutations: MutationEvent[]\n  error?: Error | undefined\n\n  // Operation timings\n  queryTime?: number | undefined\n  e2eTime?: number | undefined\n\n  // Operation state, used to trigger re-renders (spinners etc)\n  queryInProgress: boolean\n  listenInProgress: boolean\n\n  // UI drawing state\n  paneSizeOptions: PaneSizeOptions\n}\n\nexport class VisionGui extends PureComponent<VisionGuiProps, VisionGuiState> {\n  _visionRoot: RefObject<HTMLDivElement | null>\n  _queryEditorContainer: RefObject<HTMLDivElement | null>\n  _paramsEditorContainer: RefObject<HTMLDivElement | null>\n  _operationUrlElement: RefObject<HTMLInputElement | null>\n  _customApiVersionElement: RefObject<HTMLInputElement | null>\n  _resizeListener: ResizeObserver | undefined\n  _querySubscription: Subscription | undefined\n  _listenSubscription: Subscription | undefined\n  _client: SanityClient\n  _localStorage: LocalStorageish\n\n  constructor(props: VisionGuiProps) {\n    super(props)\n\n    const {client, datasets, config} = props\n    this._localStorage = getLocalStorage(client.config().projectId || 'default')\n\n    const defaultDataset = config.defaultDataset || client.config().dataset || datasets[0]\n    const defaultApiVersion = prefixApiVersion(`${config.defaultApiVersion}`)\n    const defaultPerspective = DEFAULT_PERSPECTIVE\n\n    let dataset = this._localStorage.get('dataset', defaultDataset)\n    let apiVersion = this._localStorage.get('apiVersion', defaultApiVersion)\n    let lastQuery = this._localStorage.get('query', '')\n    let lastParams = this._localStorage.get('params', '{\\n  \\n}')\n    const customApiVersion = API_VERSIONS.includes(apiVersion) ? false : apiVersion\n    let perspective = this._localStorage.get('perspective', defaultPerspective)\n\n    if (!datasets.includes(dataset)) {\n      dataset = datasets.includes(defaultDataset) ? defaultDataset : datasets[0]\n    }\n\n    if (!API_VERSIONS.includes(apiVersion)) {\n      apiVersion = DEFAULT_API_VERSION\n    }\n\n    if (!SUPPORTED_PERSPECTIVES.includes(perspective)) {\n      perspective = DEFAULT_PERSPECTIVE\n    }\n\n    if (perspective == 'pinnedRelease' && !hasPinnedPerspective(this.props.pinnedPerspective)) {\n      perspective = DEFAULT_PERSPECTIVE\n    }\n\n    if (perspective !== 'pinnedRelease' && hasPinnedPerspective(this.props.pinnedPerspective)) {\n      perspective = 'pinnedRelease'\n    }\n\n    if (typeof lastQuery !== 'string') {\n      lastQuery = ''\n    }\n\n    if (typeof lastParams !== 'string') {\n      lastParams = '{\\n  \\n}'\n    }\n\n    this._visionRoot = createRef()\n    this._operationUrlElement = createRef()\n    this._queryEditorContainer = createRef()\n    this._paramsEditorContainer = createRef()\n    this._customApiVersionElement = createRef()\n\n    this._client = props.client.withConfig({\n      apiVersion: customApiVersion || apiVersion,\n      dataset,\n      perspective: getActivePerspective({\n        visionPerspective: perspective,\n        pinnedPerspective: this.props.pinnedPerspective,\n      }),\n      allowReconfigure: true,\n    })\n\n    // Initial root height without header\n    const bodyHeight =\n      typeof window !== 'undefined' && typeof document !== 'undefined'\n        ? document.body.getBoundingClientRect().height - 60\n        : 0\n\n    const params = lastParams ? tryParseParams(lastParams, this.props.t) : undefined\n\n    this.state = {\n      // Selected options\n      dataset,\n      apiVersion,\n      customApiVersion,\n      perspective,\n\n      // Selected options validation state\n      isValidApiVersion: customApiVersion ? validateApiVersion(customApiVersion) : false,\n\n      // Inputs\n      query: lastQuery,\n      rawParams: lastParams,\n\n      // Parsed input\n      params,\n      hasValidParams: !(params instanceof Error),\n\n      // Query/listen results\n      listenMutations: [],\n\n      // Operation state\n      queryInProgress: false,\n      listenInProgress: false,\n\n      // UI drawing state\n      paneSizeOptions: calculatePaneSizeOptions(bodyHeight),\n    }\n\n    this.handleChangeDataset = this.handleChangeDataset.bind(this)\n    this.handleChangeApiVersion = this.handleChangeApiVersion.bind(this)\n    this.handleCustomApiVersionChange = this.handleCustomApiVersionChange.bind(this)\n    this.handleChangePerspective = this.handleChangePerspective.bind(this)\n    this.handleListenExecution = this.handleListenExecution.bind(this)\n    this.handleListenerEvent = this.handleListenerEvent.bind(this)\n    this.handleQueryExecution = this.handleQueryExecution.bind(this)\n    this.handleQueryChange = debounce(this.handleQueryChange, 300).bind(this)\n    this.handleParamsChange = this.handleParamsChange.bind(this)\n    this.handleCopyUrl = this.handleCopyUrl.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n    this.handleOnPasteCapture = this.handleOnPasteCapture.bind(this)\n    this.setPerspective = this.setPerspective.bind(this)\n  }\n\n  componentDidMount() {\n    window.document.addEventListener('paste', this.handlePaste)\n    window.document.addEventListener('keydown', this.handleKeyDown)\n\n    this.handleResizeListen()\n  }\n\n  componentWillUnmount() {\n    this.cancelQuery()\n    this.cancelListener()\n    this.cancelEventListener()\n    this.cancelResizeListener()\n  }\n\n  componentDidUpdate(prevProps: Readonly<VisionGuiProps>): void {\n    if (hasPinnedPerspectiveChanged(prevProps.pinnedPerspective, this.props.pinnedPerspective)) {\n      if (\n        this.state.perspective !== 'pinnedRelease' &&\n        hasPinnedPerspective(this.props.pinnedPerspective)\n      ) {\n        this.setPerspective('pinnedRelease')\n        return\n      }\n\n      if (\n        this.state.perspective === 'pinnedRelease' &&\n        !hasPinnedPerspective(this.props.pinnedPerspective)\n      ) {\n        this.setPerspective('raw')\n        return\n      }\n\n      if (this.state.perspective === 'pinnedRelease') {\n        this.setPerspective('pinnedRelease')\n      }\n    }\n  }\n\n  handleResizeListen() {\n    if (!this._visionRoot.current) {\n      return\n    }\n\n    this._resizeListener = new ResizeObserver(this.handleResize)\n    this._resizeListener.observe(this._visionRoot.current)\n  }\n\n  handleResize(entries: ResizeObserverEntry[]) {\n    const entry = entries?.[0]\n\n    this.setState((prevState) => ({\n      ...prevState,\n      paneSizeOptions: calculatePaneSizeOptions(entry.contentRect.height),\n    }))\n  }\n\n  cancelResizeListener() {\n    if (this._resizeListener) {\n      this._resizeListener.disconnect()\n    }\n  }\n\n  handlePaste(evt: React.ClipboardEvent<HTMLDivElement> | ClipboardEvent, stopPropagation = false) {\n    if (!evt?.clipboardData) {\n      return\n    }\n\n    const data = evt.clipboardData.getData('text/plain')\n    const match = data.match(sanityUrl)\n    if (!match) {\n      return\n    }\n\n    const [, usedApiVersion, usedDataset, urlQuery] = match\n    let parts: ParsedApiQueryString\n\n    try {\n      const qs = new URLSearchParams(urlQuery)\n      parts = parseApiQueryString(qs)\n    } catch (err) {\n      console.warn('Error while trying to parse API URL: ', err.message) // eslint-disable-line no-console\n      return // Give up on error\n    }\n\n    let apiVersion: string | undefined\n    let customApiVersion: string | false | undefined\n\n    if (validateApiVersion(usedApiVersion)) {\n      if (API_VERSIONS.includes(usedApiVersion)) {\n        apiVersion = usedApiVersion\n        customApiVersion = false\n      } else {\n        customApiVersion = usedApiVersion\n      }\n    }\n\n    const perspective =\n      isSupportedPerspective(parts.options.perspective) &&\n      !isVirtualPerspective(parts.options.perspective)\n        ? parts.options.perspective\n        : undefined\n\n    if (\n      perspective &&\n      (!isSupportedPerspective(parts.options.perspective) ||\n        isVirtualPerspective(parts.options.perspective))\n    ) {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-paste-unsupported-perspective',\n        status: 'warning',\n        title: 'Perspective in pasted url is currently not supported. Falling back to \"raw\"',\n      })\n    }\n\n    evt.preventDefault()\n    if (stopPropagation) {\n      // Stops propagation for the pasteEvent that occurs in the CodeMirror element if it has a match\n      evt.stopPropagation()\n    }\n    this.setState(\n      (prevState) => ({\n        dataset: this.props.datasets.includes(usedDataset) ? usedDataset : prevState.dataset,\n        query: parts.query,\n        params: parts.params,\n        rawParams: JSON.stringify(parts.params, null, 2),\n        apiVersion: typeof apiVersion === 'undefined' ? prevState.apiVersion : apiVersion,\n        customApiVersion:\n          typeof customApiVersion === 'undefined' ? prevState.customApiVersion : customApiVersion,\n        perspective: typeof perspective === 'undefined' ? prevState.perspective : perspective,\n      }),\n      () => {\n        this._localStorage.merge({\n          query: this.state.query,\n          params: this.state.rawParams,\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this._client.config({\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: getActivePerspective({\n            visionPerspective: this.state.perspective,\n            pinnedPerspective: this.props.pinnedPerspective,\n          }),\n        })\n        this.handleQueryExecution()\n        this.props.toast.push({\n          closable: true,\n          id: 'vision-paste',\n          status: 'info',\n          title: 'Parsed URL to query',\n        })\n      },\n    )\n  }\n\n  handleOnPasteCapture(ev: React.ClipboardEvent<HTMLDivElement>) {\n    this.handlePaste(ev, true)\n  }\n\n  cancelQuery() {\n    if (!this._querySubscription) {\n      return\n    }\n    this._querySubscription.unsubscribe()\n    this._querySubscription = undefined\n  }\n\n  cancelListener() {\n    if (!this._listenSubscription) {\n      return\n    }\n\n    this._listenSubscription.unsubscribe()\n    this._listenSubscription = undefined\n  }\n\n  cancelEventListener() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleChangeDataset(evt: ChangeEvent<HTMLSelectElement>) {\n    const dataset = evt.target.value\n    this._localStorage.set('dataset', dataset)\n    this.setState({dataset})\n    this._client.config({dataset})\n    this.handleQueryExecution()\n  }\n\n  handleChangeApiVersion(evt: ChangeEvent<HTMLSelectElement>) {\n    const apiVersion = evt.target.value\n    if (apiVersion?.toLowerCase() === 'other') {\n      this.setState({customApiVersion: 'v'}, () => {\n        this._customApiVersionElement.current?.focus()\n      })\n      return\n    }\n\n    this.setState({apiVersion, customApiVersion: false}, () => {\n      this._localStorage.set('apiVersion', this.state.apiVersion)\n      this._client.config({\n        apiVersion: this.state.apiVersion,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleCustomApiVersionChange(evt: ChangeEvent<HTMLInputElement>) {\n    const customApiVersion = evt.target.value || ''\n    const isValidApiVersion = validateApiVersion(customApiVersion)\n\n    this.setState(\n      (prevState) => ({\n        apiVersion: isValidApiVersion ? customApiVersion : prevState.apiVersion,\n        customApiVersion: customApiVersion || 'v',\n        isValidApiVersion,\n      }),\n      () => {\n        if (!this.state.isValidApiVersion || typeof this.state.customApiVersion !== 'string') {\n          return\n        }\n\n        this._localStorage.set('apiVersion', this.state.customApiVersion)\n        this._client.config({apiVersion: this.state.customApiVersion})\n      },\n    )\n  }\n\n  handleChangePerspective(evt: ChangeEvent<HTMLSelectElement>) {\n    const perspective = evt.target.value\n    this.setPerspective(perspective)\n  }\n\n  setPerspective(perspective: string): void {\n    if (!isSupportedPerspective(perspective)) {\n      return\n    }\n\n    this.setState({perspective}, () => {\n      this._localStorage.set('perspective', this.state.perspective)\n      this._client.config({\n        perspective: getActivePerspective({\n          visionPerspective: this.state.perspective,\n          pinnedPerspective: this.props.pinnedPerspective,\n        }),\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleListenerEvent(evt: ListenEvent<any>) {\n    if (evt.type !== 'mutation') {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-listen',\n        status: 'success',\n        title: 'Listening for mutations…',\n      })\n      return\n    }\n\n    this.setState(({listenMutations}) => ({\n      listenMutations:\n        listenMutations.length === 50\n          ? [evt, ...listenMutations.slice(0, 49)]\n          : [evt, ...listenMutations],\n    }))\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const {hasValidParams} = this.state\n    const isWithinRoot =\n      this._visionRoot.current && nodeContains(this._visionRoot.current, event.target)\n    if (isRunHotkey(event) && isWithinRoot && hasValidParams) {\n      this.handleQueryExecution()\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  ensureSelectedApiVersion() {\n    const {apiVersion, customApiVersion} = this.state\n    const wantedApiVersion = customApiVersion || apiVersion\n    if (this._client.config().apiVersion !== wantedApiVersion) {\n      this._client.config({apiVersion: wantedApiVersion})\n    }\n  }\n\n  handleListenExecution() {\n    const {query, params, rawParams, listenInProgress} = this.state\n    if (listenInProgress) {\n      this.cancelListener()\n      this.setState({listenInProgress: false})\n      return\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const paramsError = params instanceof Error ? params : undefined\n    const encodeParams = params instanceof Error ? {} : params || {}\n    const url = this._client.getDataUrl('listen', encodeQueryString(query, encodeParams, {}))\n\n    const shouldExecute = !paramsError && query.trim().length > 0\n\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelQuery()\n\n    this.setState({\n      url,\n      listenMutations: [],\n      queryInProgress: false,\n      queryResult: undefined,\n      listenInProgress: shouldExecute,\n      error: paramsError,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!shouldExecute) {\n      return\n    }\n\n    this._listenSubscription = this._client\n      .listen(query, params, {events: ['mutation', 'welcome']})\n      .subscribe({\n        next: this.handleListenerEvent,\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            listenInProgress: false,\n          }),\n      })\n  }\n\n  handleQueryExecution() {\n    const {query, params, rawParams, queryInProgress} = this.state\n\n    if (queryInProgress) {\n      this.cancelQuery()\n      this.cancelListener()\n      this.setState({queryInProgress: false})\n      return true\n    }\n\n    const paramsError = params instanceof Error && params\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelListener()\n\n    this.setState({\n      queryInProgress: !paramsError && Boolean(query),\n      listenInProgress: false,\n      listenMutations: [],\n      error: paramsError || undefined,\n      queryResult: undefined,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!query || paramsError) {\n      return true\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const urlQueryOpts: Record<string, string | string[]> = {}\n    if (this.state.perspective !== 'raw') {\n      urlQueryOpts.perspective =\n        getActivePerspective({\n          visionPerspective: this.state.perspective,\n          pinnedPerspective: this.props.pinnedPerspective,\n        }) ?? []\n    }\n\n    const url = this._client.getUrl(\n      this._client.getDataUrl('query', encodeQueryString(query, params, urlQueryOpts)),\n    )\n    this.setState({url})\n\n    const queryStart = Date.now()\n\n    this._querySubscription = this._client.observable\n      .fetch(query, params, {filterResponse: false, tag: 'vision'})\n      .subscribe({\n        next: (res) => {\n          this.setState({\n            queryTime: res.ms,\n            e2eTime: Date.now() - queryStart,\n            queryResult: res.result,\n            queryInProgress: false,\n            error: undefined,\n          })\n        },\n        error: (error) => {\n          this.setState({\n            error,\n            query,\n            queryInProgress: false,\n          })\n        },\n      })\n\n    return true\n  }\n\n  handleQueryChange(query: string) {\n    this.setState({query})\n  }\n\n  handleParamsChange({raw, parsed, valid, error}: ParamsEditorChangeEvent) {\n    this.setState(\n      {\n        rawParams: raw,\n        params: parsed,\n        hasValidParams: valid,\n        paramsError: error,\n      },\n      () => this._localStorage.set('params', raw),\n    )\n  }\n\n  handleCopyUrl() {\n    const el = this._operationUrlElement.current\n    if (!el) {\n      return\n    }\n\n    try {\n      el.select()\n      document.execCommand('copy')\n      this.props.toast.push({\n        closable: true,\n        title: 'Copied to clipboard',\n        status: 'info',\n        id: 'vision-copy',\n      })\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Unable to copy to clipboard :(')\n    }\n  }\n\n  render() {\n    const {datasets, t, pinnedPerspective} = this.props\n    const {\n      apiVersion,\n      customApiVersion,\n      dataset,\n      e2eTime,\n      error,\n      hasValidParams,\n      isValidApiVersion,\n      listenInProgress,\n      listenMutations,\n      paneSizeOptions,\n      paramsError,\n      perspective,\n      query,\n      queryInProgress,\n      queryResult,\n      queryTime,\n      rawParams,\n      url,\n    } = this.state\n    const hasResult = !error && !queryInProgress && typeof queryResult !== 'undefined'\n    const jsonUrl = hasResult ? getJsonBlobUrl(queryResult) : ''\n    const csvUrl = hasResult ? getCsvBlobUrl(queryResult) : ''\n\n    return (\n      <Root\n        direction=\"column\"\n        height=\"fill\"\n        ref={this._visionRoot}\n        sizing=\"border\"\n        overflow=\"hidden\"\n      >\n        <Header paddingX={3} paddingY={2}>\n          <Grid columns={[1, 4, 8, 12]}>\n            {/* Dataset selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.dataset-label')}</StyledLabel>\n                </Card>\n                <Select value={dataset} onChange={this.handleChangeDataset}>\n                  {datasets.map((ds) => (\n                    <option key={ds}>{ds}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* API version selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.api-version-label')}</StyledLabel>\n                </Card>\n                <Select\n                  value={customApiVersion === false ? apiVersion : 'other'}\n                  onChange={this.handleChangeApiVersion}\n                >\n                  {API_VERSIONS.map((version) => (\n                    <option key={version}>{version}</option>\n                  ))}\n                  <option key=\"other\" value=\"other\">\n                    {t('settings.other-api-version-label')}\n                  </option>\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Custom API version input */}\n            {customApiVersion !== false && (\n              <Box padding={1} column={2}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel textOverflow=\"ellipsis\">\n                      {t('settings.custom-api-version-label')}\n                    </StyledLabel>\n                  </Card>\n\n                  <TextInput\n                    ref={this._customApiVersionElement}\n                    value={customApiVersion}\n                    onChange={this.handleCustomApiVersionChange}\n                    customValidity={\n                      isValidApiVersion ? undefined : t('settings.error.invalid-api-version')\n                    }\n                    maxLength={11}\n                  />\n                </Stack>\n              </Box>\n            )}\n\n            {/* Perspective selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingBottom={1}>\n                  <Inline space={1}>\n                    <Box>\n                      <StyledLabel>{t('settings.perspective-label')}</StyledLabel>\n                    </Box>\n\n                    <Box>\n                      <PerspectivePopover />\n                    </Box>\n                  </Inline>\n                </Card>\n\n                <Select value={perspective} onChange={this.handleChangePerspective}>\n                  {SUPPORTED_PERSPECTIVES.map((perspectiveName) => {\n                    if (perspectiveName === 'pinnedRelease') {\n                      return (\n                        <>\n                          <PinnedReleasePerspectiveOption\n                            key=\"pinnedRelease\"\n                            pinnedPerspective={pinnedPerspective}\n                            t={t}\n                          />\n                          <hr />\n                        </>\n                      )\n                    }\n                    return <option key={perspectiveName}>{perspectiveName}</option>\n                  })}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Query URL (for copying) */}\n            {typeof url === 'string' ? (\n              <Box padding={1} flex={1} column={customApiVersion === false ? 6 : 4}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel>\n                      {t('query.url')}&nbsp;\n                      <QueryCopyLink onClick={this.handleCopyUrl}>\n                        [{t('action.copy-url-to-clipboard')}]\n                      </QueryCopyLink>\n                    </StyledLabel>\n                  </Card>\n                  <Flex flex={1} gap={1}>\n                    <Box flex={1}>\n                      <TextInput readOnly type=\"url\" ref={this._operationUrlElement} value={url} />\n                    </Box>\n                    <Tooltip content={t('action.copy-url-to-clipboard')}>\n                      <Button\n                        aria-label={t('action.copy-url-to-clipboard')}\n                        type=\"button\"\n                        mode=\"ghost\"\n                        icon={CopyIcon}\n                        onClick={this.handleCopyUrl}\n                      />\n                    </Tooltip>\n                  </Flex>\n                </Stack>\n              </Box>\n            ) : (\n              <Box flex={1} />\n            )}\n          </Grid>\n        </Header>\n        <SplitpaneContainer flex=\"auto\">\n          <SplitPane\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            split={narrowBreakpoint() ? 'vertical' : 'horizontal'}\n            minSize={280}\n            defaultSize={400}\n            maxSize={-400}\n          >\n            <Box height=\"stretch\" flex={1}>\n              {/*\n                  The way react-split-pane handles the sizes is kind of finicky and not clear. What the props above does is:\n                  - It sets the initial size of the panes to 1/2 of the total available height of the container\n                  - Sets the minimum size of a pane whatever is bigger of 1/2 of the total available height of the container, or 170px\n                  - The max size is set to either 60% or 70% of the available space, depending on if the container height is above 650px\n                  - Disables resizing when total height is below 500, since it becomes really cumbersome to work with the panes then\n                  - The \"primary\" prop (https://github.com/tomkp/react-split-pane#primary) tells the second pane to shrink or grow by the available space\n                  - Disables resize if the container height is less then 500px\n                  This should ensure that we mostly avoid a pane to take up all the room, and for the controls to not be eaten up by the pane\n                */}\n              <SplitPane\n                className=\"sidebarPanes\"\n                split=\"horizontal\"\n                defaultSize={\n                  narrowBreakpoint() ? paneSizeOptions.defaultSize : paneSizeOptions.minSize\n                }\n                size={paneSizeOptions.size}\n                allowResize={paneSizeOptions.allowResize}\n                minSize={narrowBreakpoint() ? paneSizeOptions.minSize : 100}\n                maxSize={paneSizeOptions.maxSize}\n                primary=\"first\"\n              >\n                <InputContainer display=\"flex\" ref={this._queryEditorContainer}>\n                  <Box flex={1}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('query.label')}</StyledLabel>\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <VisionCodeMirror\n                      value={query}\n                      onChange={this.handleQueryChange}\n                      onPasteCapture={this.handleOnPasteCapture}\n                    />\n                  </Box>\n                </InputContainer>\n                <InputContainer display=\"flex\" ref={this._paramsEditorContainer}>\n                  <Card flex={1} tone={hasValidParams ? 'default' : 'critical'}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('params.label')}</StyledLabel>\n                        {paramsError && (\n                          <Tooltip placement=\"top-end\" portal content={paramsError}>\n                            <Box padding={1} marginX={2}>\n                              <Text>\n                                <ErrorOutlineIcon />\n                              </Text>\n                            </Box>\n                          </Tooltip>\n                        )}\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <ParamsEditor\n                      value={rawParams}\n                      onChange={this.handleParamsChange}\n                      onPasteCapture={this.handleOnPasteCapture}\n                    />\n                  </Card>\n                  {/* Controls (listen/run) */}\n                  <ControlsContainer>\n                    <Card padding={3} paddingX={3}>\n                      <Tooltip\n                        content={\n                          <Card radius={4}>\n                            <Text size={1} muted>\n                              {t('params.error.params-invalid-json')}\n                            </Text>\n                          </Card>\n                        }\n                        placement=\"top\"\n                        disabled={hasValidParams}\n                        portal\n                      >\n                        <Flex justify=\"space-evenly\">\n                          <Box flex={1}>\n                            <Tooltip\n                              content={\n                                <Card radius={4}>\n                                  <Hotkeys keys={['Ctrl', 'Enter']} />\n                                </Card>\n                              }\n                              placement=\"top\"\n                              portal\n                            >\n                              <Button\n                                width=\"fill\"\n                                onClick={this.handleQueryExecution}\n                                type=\"button\"\n                                icon={queryInProgress ? StopIcon : PlayIcon}\n                                disabled={listenInProgress || !hasValidParams}\n                                tone={queryInProgress ? 'positive' : 'primary'}\n                                text={\n                                  queryInProgress\n                                    ? t('action.query-cancel')\n                                    : t('action.query-execute')\n                                }\n                              />\n                            </Tooltip>\n                          </Box>\n                          <Box flex={1} marginLeft={3}>\n                            <Button\n                              width=\"fill\"\n                              onClick={this.handleListenExecution}\n                              type=\"button\"\n                              icon={listenInProgress ? StopIcon : PlayIcon}\n                              text={\n                                listenInProgress\n                                  ? t('action.listen-cancel')\n                                  : t('action.listen-execute')\n                              }\n                              mode=\"ghost\"\n                              disabled={!hasValidParams}\n                              tone={listenInProgress ? 'positive' : 'default'}\n                            />\n                          </Box>\n                        </Flex>\n                      </Tooltip>\n                    </Card>\n                  </ControlsContainer>\n                </InputContainer>\n              </SplitPane>\n            </Box>\n            <ResultOuterContainer direction=\"column\">\n              <ResultInnerContainer flex={1}>\n                <ResultContainer\n                  flex={1}\n                  overflow=\"hidden\"\n                  tone={error ? 'critical' : 'default'}\n                  $isInvalid={Boolean(error)}\n                >\n                  <Result overflow=\"auto\">\n                    <InputBackgroundContainer>\n                      <Box marginLeft={3}>\n                        <StyledLabel muted>{t('result.label')}</StyledLabel>\n                      </Box>\n                    </InputBackgroundContainer>\n                    <Box padding={3} paddingTop={5}>\n                      {(queryInProgress || (listenInProgress && listenMutations.length === 0)) && (\n                        <Box marginTop={3}>\n                          <DelayedSpinner />\n                        </Box>\n                      )}\n                      {error && <QueryErrorDialog error={error} />}\n                      {hasResult && <ResultView data={queryResult} datasetName={dataset} />}\n                      {listenInProgress && listenMutations.length > 0 && (\n                        <ResultView data={listenMutations} datasetName={dataset} />\n                      )}\n                    </Box>\n                  </Result>\n                </ResultContainer>\n              </ResultInnerContainer>\n              {/* Execution time */}\n              <ResultFooter justify=\"space-between\" direction={['column', 'column', 'row']}>\n                <TimingsCard paddingX={4} paddingY={3} sizing=\"border\">\n                  <TimingsTextContainer align=\"center\">\n                    <Box>\n                      <Text muted>\n                        {t('result.execution-time-label')}:{' '}\n                        {typeof queryTime === 'number'\n                          ? `${queryTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                    <Box marginLeft={4}>\n                      <Text muted>\n                        {t('result.end-to-end-time-label')}:{' '}\n                        {typeof e2eTime === 'number'\n                          ? `${e2eTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                  </TimingsTextContainer>\n                </TimingsCard>\n\n                {hasResult && (\n                  <DownloadsCard paddingX={4} paddingY={3} sizing=\"border\">\n                    <SaveResultLabel muted>\n                      <Translate\n                        components={{\n                          SaveResultButtons: () => (\n                            <>\n                              <SaveJsonButton blobUrl={jsonUrl} />\n                              <SaveCsvButton blobUrl={csvUrl} />\n                            </>\n                          ),\n                        }}\n                        i18nKey=\"result.save-result-as-format\"\n                        t={t}\n                      />\n                    </SaveResultLabel>\n                  </DownloadsCard>\n                )}\n              </ResultFooter>\n            </ResultOuterContainer>\n          </SplitPane>\n        </SplitpaneContainer>\n      </Root>\n    )\n  }\n}\n\nfunction getActivePerspective({\n  visionPerspective,\n  pinnedPerspective,\n}: {\n  visionPerspective: ClientPerspective | SupportedPerspective\n  pinnedPerspective: PerspectiveContextValue\n}): ClientPerspective | undefined {\n  if (visionPerspective !== 'pinnedRelease') {\n    return visionPerspective\n  }\n\n  if (pinnedPerspective.perspectiveStack.length !== 0) {\n    return pinnedPerspective.perspectiveStack\n  }\n\n  if (typeof pinnedPerspective.selectedPerspectiveName !== 'undefined') {\n    return [pinnedPerspective.selectedPerspectiveName]\n  }\n\n  return undefined\n}\n\nconst PinnedReleasePerspectiveOption: ComponentType<{\n  pinnedPerspective: PerspectiveContextValue\n  t: TFunction\n}> = ({pinnedPerspective, t}) => {\n  const name =\n    typeof pinnedPerspective.selectedPerspective === 'object'\n      ? pinnedPerspective.selectedPerspective.metadata.title\n      : pinnedPerspective.selectedPerspectiveName\n\n  const label = hasPinnedPerspective(pinnedPerspective)\n    ? `(${t('settings.perspectives.pinned-release-label')})`\n    : t('settings.perspectives.pinned-release-label')\n\n  const text = useMemo(\n    () => [name, label].filter((value) => typeof value !== 'undefined').join(' '),\n    [label, name],\n  )\n\n  return (\n    <option value=\"pinnedRelease\" disabled={!hasPinnedPerspective(pinnedPerspective)}>\n      {text}\n    </option>\n  )\n}\n\nfunction hasPinnedPerspective({selectedPerspectiveName}: PerspectiveContextValue): boolean {\n  return typeof selectedPerspectiveName !== 'undefined'\n}\n\nfunction hasPinnedPerspectiveChanged(\n  previous: PerspectiveContextValue,\n  next: PerspectiveContextValue,\n): boolean {\n  const hasPerspectiveStackChanged = !isEqual(previous.perspectiveStack, next.perspectiveStack)\n\n  return (\n    previous.selectedPerspectiveName !== next.selectedPerspectiveName || hasPerspectiveStackChanged\n  )\n}\n","import {type SanityClient} from '@sanity/client'\nimport {useEffect, useState} from 'react'\n\nexport function useDatasets(client: SanityClient): string[] | Error | undefined {\n  const projectId = client.config().projectId\n  const [datasets, setDatasets] = useState<string[] | Error | undefined>()\n\n  useEffect(() => {\n    const datasets$ = client.observable.datasets.list().subscribe({\n      next: (result) => setDatasets(result.map((ds) => ds.name)),\n      error: (err) => setDatasets(err),\n    })\n\n    return () => datasets$.unsubscribe()\n  }, [client, projectId])\n\n  return datasets || undefined\n}\n","import {Flex, useToast} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {DelayedSpinner} from '../components/DelayedSpinner'\nimport {VisionGui} from '../components/VisionGui'\nimport {useDatasets} from '../hooks/useDatasets'\nimport {visionLocaleNamespace} from '../i18n'\nimport {type VisionProps} from '../types'\n\nexport function VisionContainer(props: VisionProps) {\n  const toast = useToast()\n  const loadedDatasets = useDatasets(props.client)\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!loadedDatasets) {\n    return (\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <DelayedSpinner />\n      </Flex>\n    )\n  }\n\n  const datasets =\n    loadedDatasets instanceof Error\n      ? // On error, use the clients configured dataset\n        [props.client.config().dataset || 'production']\n      : // Otherwise use the loaded list, obviously\n        loadedDatasets\n\n  return <VisionGui {...props} datasets={datasets} toast={toast} t={t} />\n}\n","/* eslint-disable @sanity/i18n/no-attribute-string-literals */\n/* eslint-disable i18next/no-literal-string */\nimport {Button, Card, Code, Container, Heading, Stack} from '@sanity/ui'\nimport {Component, type PropsWithChildren} from 'react'\n\nimport {clearLocalStorage} from '../util/localStorage'\n\n/**\n * @internal\n */\nexport type VisionErrorBoundaryProps = PropsWithChildren\n\n/**\n * @internal\n */\ninterface VisionErrorBoundaryState {\n  error: string | null\n  numRetries: number\n}\n\n/**\n * @internal\n */\nexport class VisionErrorBoundary extends Component<\n  VisionErrorBoundaryProps,\n  VisionErrorBoundaryState\n> {\n  constructor(props: VisionErrorBoundaryProps) {\n    super(props)\n    this.state = {error: null, numRetries: 0}\n  }\n\n  static getDerivedStateFromError(error: unknown) {\n    return {error: error instanceof Error ? error.message : `${error}`}\n  }\n\n  handleRetryRender = () =>\n    this.setState((prev) => ({error: null, numRetries: prev.numRetries + 1}))\n\n  handleRetryWithCacheClear = () => {\n    clearLocalStorage()\n    this.handleRetryRender()\n  }\n\n  render() {\n    if (!this.state.error) {\n      return this.props.children\n    }\n\n    const message = this.state.error\n    const withCacheClear = this.state.numRetries > 0\n\n    return (\n      <Card\n        height=\"fill\"\n        overflow=\"auto\"\n        paddingY={[4, 5, 6, 7]}\n        paddingX={4}\n        sizing=\"border\"\n        tone=\"critical\"\n      >\n        <Container width={3}>\n          <Stack space={4}>\n            <div>\n              <Button\n                onClick={withCacheClear ? this.handleRetryWithCacheClear : this.handleRetryRender}\n                text={withCacheClear ? 'Clear cache and retry' : 'Retry'}\n                tone=\"default\"\n              />\n            </div>\n\n            <Heading>An error occurred</Heading>\n\n            <Card border radius={2} overflow=\"auto\" padding={4} tone=\"inherit\">\n              <Stack space={4}>\n                {message && (\n                  <Code size={1}>\n                    <strong>Error: {message}</strong>\n                  </Code>\n                )}\n              </Stack>\n            </Card>\n          </Stack>\n        </Container>\n      </Card>\n    )\n  }\n}\n","import {type Tool, useClient, usePerspective} from 'sanity'\n\nimport {DEFAULT_API_VERSION} from './apiVersions'\nimport {VisionContainer} from './containers/VisionContainer'\nimport {VisionErrorBoundary} from './containers/VisionErrorBoundary'\nimport {type VisionConfig} from './types'\n\ninterface SanityVisionProps {\n  tool: Tool<VisionConfig>\n}\n\nfunction SanityVision(props: SanityVisionProps) {\n  const client = useClient({apiVersion: '1'})\n  const perspective = usePerspective()\n  const config: VisionConfig = {\n    defaultApiVersion: DEFAULT_API_VERSION,\n    ...props.tool.options,\n  }\n\n  return (\n    <VisionErrorBoundary>\n      <VisionContainer client={client} config={config} pinnedPerspective={perspective} />\n    </VisionErrorBoundary>\n  )\n}\n\nexport default SanityVision\n"],"names":["API_VERSIONS","DEFAULT_API_VERSION","slice","DelayedSpinner","props","$","_c","show","setShow","useState","t0","t1","delay","timer","setTimeout","clearTimeout","useEffect","t2","jsx","Spinner","codemirrorExtensions","javascriptLanguage","lineNumbers","highlightActiveLine","highlightActiveLineGutter","highlightSelectionMatches","highlightSpecialChars","indentOnInput","bracketMatching","closeBrackets","history","drawSelection","syntaxHighlighting","defaultHighlightStyle","fallback","keymap","of","key","run","defaultKeymap","historyKeymap","flat","filter","Boolean","useCodemirrorTheme","theme","createTheme","cmTheme","t3","createHighlight","cmHighlight","t4","color","fonts","sanity","card","enabled","cursor","hues","blue","dark","hex","selection","gray","EditorView","fg","backgroundColor","bg","caretColor","fontFamily","code","family","fontSize","rem","sizes","lineHeight","borderLeftColor","borderBottom","border","borderTop","c","base","s","syntax","HighlightStyle","define","tag","t","keyword","propertyName","name","deleted","character","macroName","property","function","variableName","labelName","constant","standard","variable","definition","separator","typeName","className","number","changed","annotation","modifier","self","namespace","operator","operatorKeyword","url","escape","regexp","link","special","string","meta","comment","strong","fontWeight","emphasis","fontStyle","strikethrough","textDecoration","heading","atom","bool","boolean","processingInstruction","inserted","invalid","EditorRoot","styled","div","space","VisionCodeMirror","sanityTheme","useTheme","CodeMirror","SUPPORTED_PERSPECTIVES","VIRTUAL_PERSPECTIVES","DEFAULT_PERSPECTIVE","isSupportedPerspective","p","includes","isVirtualPerspective","maybeVirtualPerspective","encodeQueryString","query","params","options","searchParams","URLSearchParams","set","value","Object","entries","JSON","stringify","getBlobUrl","content","mimeType","URL","createObjectURL","Blob","type","getMemoizedBlobUrlResolver","stringEncoder","prevResult","prevContent","input","revokeObjectURL","getJsonBlobUrl","getCsvBlobUrl","json2csv","Array","isArray","trim","isPlainObject","obj","prototype","toString","call","hasLocalStorage","supportsLocalStorage","keyPrefix","clearLocalStorage","i","localStorage","length","startsWith","removeItem","getLocalStorage","storageKey","loadedState","get","merge","defaultVal","state","ensureState","setItem","loadState","stored","parse","getItem","mod","parseApiQueryString","qs","prefixApiVersion","version","RO","document","ResizeObserverPolyfill","window","ResizeObserver","tryParseParams","val","parsed","JSON5","err","message","replace","validateApiVersion","apiVersion","parseableApiVersion","toUpperCase","test","isNaN","Date","defaultValue","ParamsEditor","onChange","onPasteCapture","useTranslation","visionLocaleNamespace","eventFromValue","raw","error","valid","isValid","setValid","init","setInit","newValue","event","handleChangeRaw","t5","debounce","handleChange","t6","t7","parsedParams","Error","validationError","undefined","PerspectivePopoverContent","Box","PerspectivePopoverLink","a","PerspectivePopover","open","setOpen","buttonRef","useRef","popoverRef","Symbol","for","_temp","handleClick","current","useClickOutsideEvent","Text","Badge","jsxs","Inline","t8","t9","Card","t10","t11","t12","Stack","t13","Button","HelpCircleIcon","t14","Popover","o","ErrorCode","Code","muted","critical","QueryErrorDetails","details","mapToLegacyDetails","line","dashLine","column","columnEnd","lineNumber","start","end","lineStart","lastIndexOf","match","indexOf","repeat","hats","QueryErrorDialog","ResultViewWrapper","css","lru","LRU","maxSize","ResultView","data","datasetName","workspaceDataset","useDataset","isRecord","DocumentEditLabel","JsonInspector","isExpanded","toggleExpanded","isKey","keypath","endsWith","id","LinkIcon","IntentLink","keyPath","cached","segments","split","depthLimit","some","isArrayKeyOverLimit","path","numeric","segment","limit","parseInt","preventSave","evt","preventDefault","SaveCsvButton","blobUrl","isDisabled","DocumentSheetIcon","button","Tooltip","SaveJsonButton","Root","Flex","displayName","Header","StyledLabel","Label","SplitpaneContainer","QueryCopyLink","InputBackgroundContainer","InputBackgroundContainerLeft","InputContainer","ResultOuterContainer","ResultInnerContainer","ResultContainer","$isInvalid","Result","ResultFooter","TimingsCard","TimingsTextContainer","text","ascenderHeight","descenderHeight","DownloadsCard","SaveResultLabel","ControlsContainer","nodeContains","node","other","compareDocumentPosition","sanityUrl","isRunHotkey","isHotkey","narrowBreakpoint","innerWidth","calculatePaneSizeOptions","rootHeight","defaultSize","size","allowResize","minSize","Math","min","max","VisionGui","PureComponent","constructor","client","datasets","config","_localStorage","projectId","defaultDataset","dataset","defaultApiVersion","defaultPerspective","lastQuery","lastParams","customApiVersion","perspective","hasPinnedPerspective","pinnedPerspective","_visionRoot","createRef","_operationUrlElement","_queryEditorContainer","_paramsEditorContainer","_customApiVersionElement","_client","withConfig","getActivePerspective","visionPerspective","allowReconfigure","bodyHeight","body","getBoundingClientRect","height","isValidApiVersion","rawParams","hasValidParams","listenMutations","queryInProgress","listenInProgress","paneSizeOptions","handleChangeDataset","bind","handleChangeApiVersion","handleCustomApiVersionChange","handleChangePerspective","handleListenExecution","handleListenerEvent","handleQueryExecution","handleQueryChange","handleParamsChange","handleCopyUrl","handlePaste","handleKeyDown","handleResize","handleOnPasteCapture","setPerspective","componentDidMount","addEventListener","handleResizeListen","componentWillUnmount","cancelQuery","cancelListener","cancelEventListener","cancelResizeListener","componentDidUpdate","prevProps","hasPinnedPerspectiveChanged","_resizeListener","observe","entry","setState","prevState","contentRect","disconnect","stopPropagation","clipboardData","getData","usedApiVersion","usedDataset","urlQuery","parts","warn","toast","push","closable","status","title","ev","_querySubscription","unsubscribe","_listenSubscription","removeEventListener","target","toLowerCase","focus","isWithinRoot","ensureSelectedApiVersion","wantedApiVersion","paramsError","encodeParams","getDataUrl","shouldExecute","queryResult","queryTime","e2eTime","listen","events","subscribe","next","urlQueryOpts","getUrl","queryStart","now","observable","fetch","filterResponse","res","ms","result","el","select","execCommand","console","render","hasResult","jsonUrl","csvUrl","Grid","Select","map","ds","TextInput","perspectiveName","Fragment","CopyIcon","SplitPane","ErrorOutlineIcon","Hotkeys","StopIcon","PlayIcon","Translate","SaveResultButtons","perspectiveStack","selectedPerspectiveName","PinnedReleasePerspectiveOption","selectedPerspective","metadata","label","join","previous","hasPerspectiveStackChanged","isEqual","useDatasets","setDatasets","datasets$","list","VisionContainer","useToast","loadedDatasets","VisionErrorBoundary","Component","numRetries","getDerivedStateFromError","handleRetryRender","prev","handleRetryWithCacheClear","children","withCacheClear","Container","Heading","SanityVision","useClient","usePerspective","tool"],"mappings":"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"}